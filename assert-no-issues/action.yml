name: 'API Call and Parse JSON'
description: 'Calls an API using a configurable domain, parses the JSON response, and fails the job if insights are found.'
inputs:
  digma_url:
    description: 'The Digma API to call'
    required: true
  api_token:
    description: 'Authorization token for API access'
    required: true
  user_name:
    description: 'Digma user'
    required: true
  password:
    description: 'Digma password'
    required: true
  environment_id:
    description: 'Digma environment'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Call API and Check Response
      shell: bash
      run: |
        user="${{ inputs.user_name }}"
        password="${{ inputs.password }}"
        api_token="${{ inputs.api_token }}"
        domain="${{ inputs.digma_url }}"
        environment_id="${{ inputs.environment_id }}"
        encoded_env=$(jq -nr --arg str "$environment_id" '$str | @uri')


        # Make the POST request and store the response
        response=$(curl -s -X POST "${domain}/authentication/login" \
          -H "Digma-Access-Token: Token $api_token" \
          -H "Content-Type: application/json" \
          -H "Accept: application/json" \
          -d '{"username":"'"$user"'","password":"'"$password"'"}')

        # Parse the access token from the response
        access_token=$(echo $response | jq -r '.accessToken')

        response=$(curl -X 'GET' \
          "${domain}/Insights/get_insights_view?Page=0&PageSize=2&ShowDismissed=false&ShowUnreadOnly=true&DirectOnly=false&Environment=${encoded_env}&InsightViewType=Issues" \
          -H 'accept: application/json' \
          -H "Digma-Access-Token: Token $api_token" \
          -H "Authorization: Bearer $access_token" \
          -s)
      
        if echo "$response" | jq -e '.insights | length > 0' > /dev/null; then
          echo "$response" | jq -r '.insights[] | "* \(.type):  \"\(.spanInfo.displayName)\""'
          echo "::error ::Found new issues"
          exit 1
        else
          echo "No new issues found"
        fi  # This is where the 'if' block is closed
